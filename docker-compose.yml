services:
  api: &main_app
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ai_news_bot:${AI_NEWS_BOT_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    environment:
      AI_NEWS_BOT_HOST: 0.0.0.0
      AI_NEWS_BOT_DB_FILE: /db_data/db.sqlite3
      AI_NEWS_BOT_REDIS_HOST: ai_news_bot-redis
    volumes:
      - ai_news_bot-db-data:/db_data/

  frontend:
    build:
      context: ./ai_news_frontend
      dockerfile: Dockerfile
    image: ai_news_bot_frontend:${AI_NEWS_BOT_VERSION:-latest}
    restart: always
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    command: ["nginx", "-g", "daemon off;"]

  migrator:
    image: ai_news_bot:${AI_NEWS_BOT_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      AI_NEWS_BOT_DB_FILE: /db_data/db.sqlite3
    volumes:
      - ai_news_bot-db-data:/db_data/

  redis:
    image: bitnami/redis:6.2.5
    hostname: "ai_news_bot-redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50



volumes:
  ai_news_bot-db-data:
    name: ai_news_bot-db-data
